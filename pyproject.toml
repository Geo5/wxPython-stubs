[project]
name = "wxpython-stubs"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "typing-extensions>=4.15.0",
    "wxpython>=4.2.1",
]

[dependency-groups]
dev = [
  "mypy>=1.18.2",
  "ruff>=0.13.1",
]

[build-system]
requires = ["uv_build>=0.8.15,<0.9.0"]
build-backend = "uv_build"

# From https://github.com/microsoft/python-type-stubs/blob/main/pyproject.toml
[tool.mypy]
strict = true
check_untyped_defs = true  # Strict check on all defs
show_column_numbers = true
# Not all imports in these stubs are gonna be typed
# Don't infer symbols from untyped packages as Any
follow_untyped_imports = true
warn_unused_ignores = false  # Change from pandas
# Partial stubs are acceptable
disallow_any_generics = false
disallow_incomplete_defs = false
disallow_untyped_defs = false
# Suppressing errors
disable_error_code = []

[tool.ruff]
line-length = 100
# Oldest supported Python version
target-version = "py39"
preview = true
fix = true

[tool.ruff.lint]
select = ["ALL"]
extend-safe-fixes = [
  "UP036",  # Remove unnecessary `sys.version_info` blocks
]
ignore = [
  # Ignore rules when using formatting as per recommendation:
  # https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules
  "W191",
  "E111",
  "E114",
  "E117",
  "D206",
  "D300",
  "Q000",
  "Q001",
  "Q002",
  "Q003",
  "COM812",
  "COM819",
  "ISC001",
  "ISC002",
  # line-too-ling: Handled on best effort basis by formatter
  "E501",  # tab-indentation
  # ##
  # Rules we don't want or don't agree with
  # ##
  # We're not a library, no need to document everything
  "D1",  # Missing docstring in ...
  # Highly opinionated, and it's often necessary to violate it
  "PLC0415",  # `import` should be at the top-level of a file
  # Leave the size and complexity of tests to human interpretation
  "PLR09",  # Too many ...
  # Too many magic number "2" that are preferable inline. https://github.com/astral-sh/ruff/issues/10009
  "PLR2004",  # Magic value used in comparison, consider replacing `{value}` with a constant variable
  # Git blame is sufficient
  "TD002",  # Missing author in TODO;
  "TD003",  # Missing issue link for this TODO
  "UP009", # Coding at start of file is generated
  "PLC0205",  # Sometimes __slots__ really is a string at runtime
  # ##
  # False-positives, but already checked by type-checkers
  # ##
  # Ruff doesn't support multi-file analysis yet: https://github.com/astral-sh/ruff/issues/5295
  "RUF013",  # PEP 484 prohibits implicit `Optional`
  "CPY001",  # Copyright
]

[tool.ruff.lint.per-file-ignores]
"*.pyi" = [
  "D",
  "B008",
  "PYI009",
  "PYI011",
  "PYI014",
  "PYI021",
  "PYI047",
  "PYI048",
  "PIE790",
  "E201",
  "E202",
  "E221",
  "E227",
  "E231",
  "E252",
  "E303",
  "E402",
  "I001",
  "W293",
  "UP007",
  "UP045",
  "F401",
  "E265", # pyi files have generated block comments, cannot change them.
  # A lot of stubs are incomplete on purpose.
  # Some ANN204 (special method) are autofixable in stubs, but not all.
  "ANN2",  # Missing return type annotation for ...
  # ##
  # Rules that are out of the control of stub authors:
  # ##
  # Names in stubs should match the implementation, even if it's ambiguous.
  # https://github.com/astral-sh/ruff/issues/15293
  "A",  # flake8-builtins
  "E743",  # Ambiguous function name; stubs must follow implementation
  # Stubs can sometimes re-export entire modules.
  # Issues with using a star-imported name will be caught by type-checkers.
  "F403",  # `from . import *` used; unable to detect undefined names
  "F405",  # may be undefined, or defined from star imports
  # Most pep8-naming rules don't apply for third-party stubs like typeshed.
  # N811 to N814 could apply, but we often use them to disambiguate a name whilst making it look like a more common one
  "N8",  # pep8-naming
  # Stubs are allowed to use private variables (pyright's reportPrivateUsage is also disabled)
  "PLC2701",  # Private name import from external module
  # Names in stubs should match implementation
  "PLW0211",  # First argument of a static method should not be named `{argument_name}`
]

[tool.ruff.lint.isort]
combine-as-imports = true
extra-standard-library = [
  "typing_extensions",
]

[tool.uv.build-backend]
module-name = "wx-stubs"

